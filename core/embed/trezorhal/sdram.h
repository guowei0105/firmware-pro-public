#ifndef TREZORHAL_FMC_SDRAMH_
#define TREZORHAL_FMC_SDRAMH_

#include STM32_HAL_H

#include <util_macros.h>

/* Register Mode */
#define FMC_SDRAM_DEVICE_BURST_LENGTH_1 0x00000000U
#define FMC_SDRAM_DEVICE_BURST_LENGTH_2 0x00000001U
#define FMC_SDRAM_DEVICE_BURST_LENGTH_4 0x00000002U
#define FMC_SDRAM_DEVICE_BURST_LENGTH_8 0x00000004U
#define FMC_SDRAM_DEVICE_BURST_TYPE_SEQUENTIAL 0x00000000U
#define FMC_SDRAM_DEVICE_BURST_TYPE_INTERLEAVED 0x00000008U
#define FMC_SDRAM_DEVICE_CAS_LATENCY_2 0x00000020U
#define FMC_SDRAM_DEVICE_CAS_LATENCY_3 0x00000030U
#define FMC_SDRAM_DEVICE_OPERATING_MODE_STANDARD 0x00000000U
#define FMC_SDRAM_DEVICE_WRITEBURST_MODE_PROGRAMMED 0x00000000U
#define FMC_SDRAM_DEVICE_WRITEBURST_MODE_SINGLE 0x00000200U

/* Command Mode */
#define FMC_SDRAM_DEVICE_NORMAL_MODE_CMD 0x00000000U
#define FMC_SDRAM_DEVICE_CLK_ENABLE_CMD 0x00000001U
#define FMC_SDRAM_DEVICE_PALL_CMD 0x00000002U
#define FMC_SDRAM_DEVICE_AUTOREFRESH_MODE_CMD 0x00000003U
#define FMC_SDRAM_DEVICE_LOAD_MODE_CMD 0x00000004U
#define FMC_SDRAM_DEVICE_SELFREFRESH_MODE_CMD 0x00000005U
#define FMC_SDRAM_DEVICE_POWERDOWN_MODE_CMD 0x00000006U

// Addresses
#define FMC_SDRAM_ADDRESS ((uint32_t)0xD0000000)
#define FMC_SDRAM_ADDRESS_END FMC_SDRAM_ADDRESS + MB(32)

// COMMON
#define FMC_SDRAM_LTDC_BUFFER_ADDRESS (FMC_SDRAM_ADDRESS + 0)  // 0xD0000000
#define FMC_SDRAM_LTDC_BUFFER_LEN MB(3)                        // 0xD0300000 (3MB for Layer1 + Layer2)

// Bootloader Layout
#define FMC_SDRAM_BOOLOADER_BUFFER_ADDRESS \
  (FMC_SDRAM_ADDRESS + MB(3))                  // 0xD0300000
#define FMC_SDRAM_BOOLOADER_BUFFER_LEN MB(29)  // 0xD2000000

// Firmware Layout
#define FMC_SDRAM_CAMERA_BUFFER_ADDRESS \
  (FMC_SDRAM_ADDRESS + FMC_SDRAM_LTDC_BUFFER_LEN + MB(2))  // 0xD0500000 (after LVGL buffer)

#define FMC_SDRAM_LVGL_BUFFER_ADDRESS \
  (FMC_SDRAM_ADDRESS + FMC_SDRAM_LTDC_BUFFER_LEN)  // 0xD0300000
#define FMC_SDRAM_LVGL_BUFFER_LEN MB(2)            // 0xD0500000
// not used

#define FMC_SDRAM_JPEG_INPUT_DATA_BUFFER_ADDRESS   \
  (FMC_SDRAM_ADDRESS + FMC_SDRAM_LTDC_BUFFER_LEN + \
   FMC_SDRAM_LVGL_BUFFER_LEN)                       // 0xD0500000
#define FMC_SDRAM_JPEG_INPUT_DATA_BUFFER_LEN MB(1)  // 0xD0600000

#define FMC_SDRAM_JPEG_OUTPUT_DATA_BUFFER_ADDRESS \
  (FMC_SDRAM_JPEG_INPUT_DATA_BUFFER_ADDRESS +     \
   FMC_SDRAM_JPEG_INPUT_DATA_BUFFER_LEN)             // 0xD0600000
#define FMC_SDRAM_JPEG_OUTPUT_DATA_BUFFER_LEN MB(2)  // 0xD0800000

#define FMC_SDRAM_USER_HEAP_ADDRESS            \
  (FMC_SDRAM_JPEG_OUTPUT_DATA_BUFFER_ADDRESS + \
   FMC_SDRAM_JPEG_OUTPUT_DATA_BUFFER_LEN)  // 0xD0800000
#define FMC_SDRAM_USER_HEAP_LEN MB(19)     // 0xD1B00000

#define FMC_SDRAM_USER_BSS_ADDRESS \
  (FMC_SDRAM_USER_HEAP_ADDRESS + FMC_SDRAM_USER_HEAP_LEN)  // 0xD1B00000
#define FMC_SDRAM_USER_BSS_LEN MB(1)                       // 0xD1C00000

// FIXED LOCATION FOR FIRMWARE P2
#define FMC_SDRAM_FIRMWARE_P2_ADDRESS 0xD1C00000  // 0xD1C00000
#define FMC_SDRAM_FIRMWARE_P2_LEN MB(4)           // 0xD2000000

_Static_assert(FMC_SDRAM_USER_BSS_ADDRESS + FMC_SDRAM_USER_BSS_LEN <=
                   FMC_SDRAM_FIRMWARE_P2_ADDRESS,
               "FIRMWARE P2 overlaps with USER HEAP");

// HANDLE
extern SDRAM_HandleTypeDef hsdram[1];

// FUNCTIONS
int sdram_init(void);
int sdram_reinit(void);
void sdram_set_self_refresh(void);
void sdram_set_normal_mode(void);
#endif
